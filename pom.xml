<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- 模块版本：相对固定的值 -->
    <modelVersion>4.0.0</modelVersion>

    <!-- 父级项目 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!-- 当前项目的配置 -->
    <groupId>cn.tedu</groupId>
    <artifactId>tmall-server</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>tmall-server</name>
<!--    描述的说明可以自定义-->
    <description>Demo project for Spring Boot</description>

    <!-- 父级项目需要显示的配置packaging标签的值为pom -->
    <!-- 此标签的默认值是jar，普通的项目保持为默认值即可 -->
    <packaging>pom</packaging>

    <!-- 子模块项目清单,这里的写法是你看到的项目目录的写法 -->
    <modules>
        <module>tmall-attachment</module>
        <module>tmall-admin</module>
        <module>tmall-front</module>
        <module>tmall.common</module>
        <module>tmall-basic</module>
    </modules>

    <!-- 属性配置，主要用于配置一些变量，通常是依赖项的版本的值 -->
    <!-- 各标签的名称是自定义的 -->
    <properties>
        <tmall.version>0.0.1-SNAPSHOT</tmall.version>
        <java.version>1.8</java.version>
        <spring-boot.version>2.5.0</spring-boot.version>
        <lombok.version>1.18.28</lombok.version>
        <mybatis-spring-boot-starter.version>2.2.2</mybatis-spring-boot-starter.version>
        <mybatis-plus-spring-boot.version>3.3.0</mybatis-plus-spring-boot.version>
        <pagehelper-spring-boot.version>1.3.0</pagehelper-spring-boot.version>
        <mysql-connector-j.version>8.0.33</mysql-connector-j.version>
        <knife4j-spring-boot.version>2.0.9</knife4j-spring-boot.version>
        <jjwt.version>0.9.1</jjwt.version>
        <fastjson.version>1.2.75</fastjson.version>
        <hutool.version>5.8.15</hutool.version>
        <alipay.version>4.38.72.ALL</alipay.version>
    </properties>

    <!-- 依赖管理：核心价值在于管理各依赖项的版本 -->
    <!-- 各子级项目不会通过继承直接得到这些依赖，子级项目仍需要自行添加依赖项 -->
    <!-- 当子级项目添加依赖时，可以按需配置scope标签，以指定依赖项的作用域 -->
    <!-- 当scope配置为test时：此依赖项仅作用于测试（src/test下的代码），且不参与项目的打包 -->
    <!-- 当scope配置为provided时：由使用依赖的项目提供此依赖项，表现为依赖项不会被传递 -->
    <!-- 当子级项目的依赖项配置了optional为true时：表示此依赖项不会被传递 -->
    <dependencyManagement>
        <!-- 依赖项 -->
        <dependencies>
            <!-- 学茶商城的公共依赖项 -->
            <dependency>
                <groupId>cn.tedu</groupId>
                <artifactId>tmall_common</artifactId>
                <version>${tmall.version}</version>
            </dependency>

            <!-- 支付宝SDK -->
            <!-- https://central.sonatype.com/artifact/com.alipay.sdk/alipay-sdk-java?smo=true -->
            <dependency>
                <groupId>com.alipay.sdk</groupId>
                <artifactId>alipay-sdk-java</artifactId>
                <version>${alipay.version}</version>
            </dependency>

<!--            &lt;!&ndash; Spring Boot的基础依赖项 &ndash;&gt;-->
<!--            <dependency>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-starter</artifactId>-->
<!--                <version>${default.dependency.version}</version>-->
<!--            </dependency>-->

            <!-- Spring Boot支持Spring MVC的依赖项 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <!-- Spring Boot支持Spring Validation的依赖项，用于检查参数的基本有效性 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-validation</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- Knife4j Spring Boot：在线API文档 -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j-spring-boot.version}</version>
            </dependency>

            <!-- Spring Boot测试的依赖项 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
<!--                <scope>test</scope>   父级不关心作用域-->
            </dependency>

            <!-- Spring Boot支持Spring Security的依赖项，用于处理认证与授权 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!-- MyBatis整合Spring Boot的依赖项 -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>
            <!-- Mybatis Plus整合Spring Boot的依赖项 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-spring-boot.version}</version>
            </dependency>

            <!-- MySQL数据库编程的依赖项 -->
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <scope>runtime</scope>
                <version>${mysql-connector-j.version}</version>
            </dependency>
            <!-- 基于MyBatis或MyBatis Plus的分页查询框架 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-spring-boot.version}</version>
            </dependency>

            <!-- Spring Boot支持Redis编程 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- JJWT（Java JWT） -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>

            <!-- fastjson：实现对象与JSON的相互转换 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!-- hutool：小工具集合 -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>


    <!-- 配置项目打包 -->
    <!-- 关于spring-boot-maven-plugin的报错： -->
    <!-- 1. 直接删除 -->
    <!-- 2. 手动添加版本号，与Spring Boot版本一致，不报错后即可将版本号删除 -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
